name: deploy

on:
  workflow_dispatch:

jobs:
  deploy-stage:
    runs-on: ubuntu-latest
    environment: stage
    env:
      # ENVIRONMENT_ID: stage
      REGISTRY_URL: ghcr.io
      IMAGE_NAME: openedx
      SMTP_EMAIL: contact@africancitieslab.org

    # deployment workflow begins here
    # --------------------------------------------
    steps:
      - name: checkout
        uses: actions/checkout@v3

      # - name: initialize environment
      #   uses: ./.github/actions/tutor-init

      # ---------------------------------------------------------------------------------
      # initialize workflow environment variables
      # ---------------------------------------------------------------------------------
      # - name: load environment specific settings (direct)
      #   shell: bash
      #   run: |
      #     cat ci/tutor-deploy/envs/${{ env.ENVIRONMENT_ID }}/config.yml >> $GITHUB_ENV

      # - name: copy file via ssh password
      #   uses: appleboy/scp-action@v0.1.3
      #   with:
      #     host: ${{ secrets.DROPLET_HOST }}
      #     username: ${{ secrets.DROPLET_USER }}
      #     key: ${{ secrets.SSH_KEY }}
      #     source: "ci/tutor-deploy/envs/${{ env.ENVIRONMENT_ID }}/config.yml"
      #     target: "config.yml"

      - name: load environment specific settings
        shell: bash
        run: |-
          # echo "TUTOR_LMS_HOST=$LMS_HOSTNAME" >> $GITHUB_ENV
          # echo "TUTOR_CMS_HOST=$CMS_HOSTNAME" >> $GITHUB_ENV
          # TODO: DRY this
          # echo "TUTOR_LMS_HOST=courses-staging.africancitieslab.org" >> $GITHUB_ENV
          # echo "TUTOR_CMS_HOST=studio.courses-staging.africancitieslab.org" >> $GITHUB_ENV
          echo "DOCKER_IMAGE_OPENEDX=${{ env.REGISTRY_URL }}/${{ github.actor }}/${{ env.IMAGE_NAME }}" >> $GITHUB_ENV
          # echo "OPENEDX_COMMON_VERSION=open-release/nutmeg.2" >> $GITHUB_ENV

      - name: install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_KEY }}
          known_hosts: unnecessary
          if_key_exists: fail # replace / ignore / fail; optional (defaults to fail)

      - name: add known hosts
        run: ssh-keyscan -H ${{ secrets.DROPLET_HOST }} >> ~/.ssh/known_hosts

      - name: config DigitalOcean droplet via SSH action
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.SSH_KEY }}
          envs: DOCKER_IMAGE_OPENEDX,SMTP_EMAIL,${{ secrets.SMTP_PASSWORD }}
          script: |
            # add tutor dir to path
            PATH=$PATH:~/.local/bin
            # config backend variables
            tutor config save \
                # --set LMS_HOSTNAME=${TUTOR_LMS_HOST} \
                # --set CMS_HOSTNAME=${TUTOR_CMS_HOST} \
                --set ENABLE_HTTPS=true \
                --set DOCKER_IMAGE_OPENEDX=${DOCKER_IMAGE_OPENEDX} \
                --set OPENEDX_COMMON_VERSION=open-release/nutmeg.2 \
                --set SMTP_HOST=smtp.porkbun.com \
                --set SMTP_PORT=587 \
                --set SMTP_USE_SSL=false \
                --set SMTP_USE_TLS=true \
                --set SMTP_USERNAME=${SMTP_EMAIL} \
                --set SMTP_PASSWORD=${{ secrets.SMTP_PASSWORD }} \
                --set OPENEDX_LMS_UWSGI_WORKERS=8 \
                --set OPENEDX_CMS_UWSGI_WORKERS=4
            # set theme
            tutor local settheme acl-indigo-theme

      - name: print config from DigitalOcean droplet via SSH action
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            # add tutor dir to path
            PATH=$PATH:~/.local/bin
            # pip env
            echo 'pip list:'
            echo '-------------------------------------'
            pip list
            # tutor config apps folder
            echo 'apps:'
            echo '-------------------------------------'
            ls $(tutor config printroot)/env/apps -lha
            # tutor config plugins folder
            if [ ! -d "$(tutor config printroot)/env/plugins" ]; then
              echo "No plugins installed."
              exit
            fi
            echo 'plugins:'
            echo '-------------------------------------'
            ls $(tutor config printroot)/env/plugins -lha
            # tutor config.yml
            echo 'config.yml:'
            echo '-------------------------------------'
            cat -n $(tutor config printroot)/config.yml
            # tutor lms.env.yml
            echo 'lms.env.yml:'
            echo '-------------------------------------'
            cat -n $(tutor config printroot)/env/apps/openedx/config/lms.env.yml
            # tutor cms.env.yml
            echo 'cms.env.yml:'
            echo '-------------------------------------'
            cat -n $(tutor config printroot)/env/apps/openedx/config/cms.env.yml

      - name: deploy tutor via SSH action
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            # add tutor dir to path
            PATH=$PATH:~/.local/bin
            # start
            tutor local start -d
