name: deploy

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      # common settings
      # --------------------------------------------
      DEBUG_MODE: false

      # environment settings
      # --------------------------------------------
      ENVIRONMENT_ID: stage

    # deployment workflow begins here
    # --------------------------------------------
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: initialize environment
        uses: ./.github/actions/tutor-init

      # ---------------------------------------------------------------------------------
      # initialize workflow environment variables
      # ---------------------------------------------------------------------------------
      - name: load environment specific settings (direct)
        shell: bash
        run: |
          cat ci/tutor-deploy/envs/${{ env.ENVIRONMENT_ID }}/config.yml >> $GITHUB_ENV

      # note that values like $LMS_HOSTNAME come from this repo
      # in /ci/tutor-deploy/envs/<environment-name>/config.yml
      - name: load additional environment specific settings
        shell: bash
        run: |-
          echo "TUTOR_LMS_HOST=$LMS_HOSTNAME" >> $GITHUB_ENV
          echo "TUTOR_CMS_HOST=$CMS_HOSTNAME" >> $GITHUB_ENV
          echo "DOCKER_IMAGE_OPENEDX=ghcr.io/openedx:latest" >> $GITHUB_ENV
          echo "OPENEDX_COMMON_VERSION=open-release/nutmeg.2" >> $GITHUB_ENV

      # ---------------------------------------------------------------------------------
      # Configure optional tutor plugins
      # ---------------------------------------------------------------------------------
      # - name: enable tutor plugin - discovery
      #   uses: openedx-actions/tutor-plugin-enable-discovery@v1.0.0
      #   with:
      #     namespace: ${{ env.NAMESPACE }}

      # ACHTUNG: discovery plugin is already enabled in `tutor-init` action
      # - name: Enable the Discovery plugin
      #   shell: bash
      #   run: |
      #     pip install tutor-discovery
      #     tutor plugins enable discovery
      #     tutor config save

      - name: enable the xqueue plugin
        id: save-config
        shell: bash
        run: |
          pip install tutor-xqueue
          tutor plugins enable xqueue
          tutor config save

      - name: configure discussion forum
        shell: bash
        run: |
          pip install tutor-forum
          tutor plugins enable forum
          tutor config save

      # ---------------------------------------------------------------------------------
      # Configure backend services
      # ---------------------------------------------------------------------------------
      - name: configure SMTP
        shell: bash
        run: |
          tutor config save --set SMTP_HOST=smtp.porkbun.com --set SMTP_PORT=587 \
              --set SMTP_USE_SSL=false --set SMTP_USE_TLS=true \
              --set SMTP_USERNAME=${SMTP_EMAIL} --set SMTP_PASSWORD=${SMTP_PASSWORD}
        env:
          SMTP_EMAIL: contact@africancitieslab.org
          SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}

      - name: increase web server capacity
        shell: bash
        run: |
          tutor config save \
              --set OPENEDX_LMS_UWSGI_WORKERS=8 \
              --set OPENEDX_CMS_UWSGI_WORKERS=4

      # ---------------------------------------------------------------------------------
      # Add your custom configuration tasks here ....
      # ---------------------------------------------------------------------------------
      - name: Dump tutor config
        uses: openedx-actions/tutor-print-dump@v1.0.0

      - name: Copy tutor config file to droplet

      # ---------------------------------------------------------------------------------
      # Deploy
      # ---------------------------------------------------------------------------------
      - name: deploy tutor
        uses: ./.github/actions/tutor-deploy
        with:
          environment-id: ${{ env.ENVIRONMENT_ID }}

      - name: enable multiple language support
        shell: bash
        run: |
          tutor local run lms ./manage.py lms shell -c \
              "from openedx.core.djangoapps.dark_lang.models import DarkLangConfig; DarkLangConfig.objects.create(enabled=True, released_languages='fr,en')"

      - name: set theme
        shell: bash
        run: |
          tutor local settheme acl-indigo-theme

      - name: Create admin user
        id: create-user
        shell: bash
        run: |
          tutor local createuser --password "${TUTOR_ADMIN_PASSWORD}" \
              --staff --superuser "${TUTOR_ADMIN_USER}" "${TUTOR_ADMIN_EMAIL}"
        env:
          TUTOR_ADMIN_PASSWORD: ${{ secrets.TUTOR_ADMIN_PASSWORD }}
          TUTOR_ADMIN_USER: ${{ secrets.TUTOR_ADMIN_USER }}
          TUTOR_ADMIN_EMAIL: contact@africancitieslab.org
