#cloud-config

package_update: true
package_upgrade: true
package_reboot_if_required: true

groups:
    - docker

users:
    - name: ${user}
      lock_passwd: true
      shell: /bin/bash
      ssh_authorized_keys:
      - ${init_ssh_public_key}
      groups: docker
      sudo: ALL=(ALL) NOPASSWD:ALL

packages:
  - apt-transport-https
  - ca-certificates
  - curl
  - gnupg-agent
  - software-properties-common
  - unattended-upgrades

runcmd:
  # install docker
  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
  - add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
  - apt-get update -y
  - apt-get install -y docker-ce docker-ce-cli containerd.io
  - systemctl start docker
  - systemctl enable docker
  # install docker-compose
  - curl -L "https://github.com/docker/compose/releases/download/v${docker_compose_version}/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
  - chmod +x /usr/local/bin/docker-compose
  # install other tutor requirements
  - apt install -y python3 python3-pip libyaml-dev
  - pip install --upgrade pyyaml
  # install tutor and plugins
  - pip install --no-input tutor tutor-discovery tutor-xqueue tutor-forum tutor-mfe
  - tutor plugins enable discovery
  - tutor plugins enable xqueue
  - tutor plugins enable forum
  - tutor plugins enable mfe
  - tutor config save --set LANGUAGE_CODE=en --set PLATFORM_NAME="African Cities Lab" --set CONTACT_EMAIL=contact@africancitieslab.org --set LMS_HOST=${lms_hostname} --set CMS_HOST=${cms_hostname}
  # start tutor
  # - tutor local start -d
  # servicie initialization
  # - tutor local init
  # TODO: create super user (how to hide password from cloud-init logs?)
  # enable multi language support
  # - tutor local run lms ./manage.py lms shell -c "from openedx.core.djangoapps.dark_lang.models import DarkLangConfig; DarkLangConfig.objects.create(enabled=True, released_languages='fr,en')"
